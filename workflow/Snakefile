# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.

from snakemake.utils import min_version

min_version("6.3.0")


configfile: "config/config.yaml"


pepfile: config["pepfile"]


report: "report/workflow.rst"


include: "rules/common.smk"
include: "rules/assembly.smk"
include: "rules/metabat.smk"
include: "rules/das_tool.smk"
include: "rules/trimming.smk"
include: "rules/qc.smk"
include: "rules/host_filtering.smk"
include: "rules/metabat2.smk"
include: "rules/metabinner.smk"
include: "rules/metacoag.smk"
include: "rules/rosella.smk"
include: "rules/vamb.smk"
include: "rules/classify.smk"
include: "rules/report.smk"


rule all:
    input:
        expand(
            "results/{project}/output/report/report_{project}.zip",
            project=get_project(),
        ),
        expand(
            "results/{project}/output/fastas/{sample}/{sample}_final.contigs.fa.gz",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/output/fastas/{sample}/mags/",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/output/fastas/{sample}/bins/",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/output/report/{sample}/{sample}_DASTool_summary.tsv",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/output/classification/reads/{sample}/{sample}_{level}_kaiju_summary.tsv",
            project=get_project(),
            sample=get_samples(),
            level=["species", "genus"],
        ),
        # removal logs
        expand(
            "logs/{project}/assembly/{sample}_intermediate_removal.done",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "logs/{project}/metabinner/{sample}/coverage_profile_{threshold}_removal.done",
            project=get_project(),
            sample=get_samples(),
            threshold=get_contig_length_filter(),
        ),
        expand(
            "logs/{project}/metabinner/{sample}/composition_profile_kmer_{kmer_size}_f{threshold}_removal.done",
            project=get_project(),
            sample=get_samples(),
            kmer_size=get_kmersize(),
            threshold=get_contig_length_filter(),
        ),
        expand(
            "logs/{project}/metabinner/{sample}/metabinner_removal.done",
            project=get_project(),
            sample=get_samples(),
        ),
