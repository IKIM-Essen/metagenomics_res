# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.

from snakemake.utils import min_version

min_version("6.3.0")


configfile: "config/config.yaml"


pepfile: config["pepfile"]


report: "report/workflow.rst"


include: "rules/common.smk"
include: "rules/trimming.smk"
include: "rules/qc.smk"
include: "rules/host_filtering.smk"
include: "rules/assembly.smk"
include: "rules/metabat2.smk"
include: "rules/metabinner.smk"
include: "rules/metacoag.smk"
include: "rules/rosella.smk"
include: "rules/vamb.smk"
include: "rules/das_tool.smk"
include: "rules/classify.smk"
include: "rules/report.smk"


rule all:
    input:
        expand(
            "results/{project}/report/report.zip",
            project=get_project(),
        ),
        expand(
            "results/{project}/assembly/{sample}_final.contigs.fa.gz",
            project=get_project(),
            sample=get_samples(),
        ),


"""

        
        expand(
            "results/{project}/das_tool/{sample}/{sample}_DASTool_summary.tsv",
            project=get_project(),
            sample=get_samples(),
        ),
        
        expand(
            "results/{project}/qc/checkm2/{sample}/quality_report.tsv",
            project=get_project(),
            sample=get_samples(),
        ),
        
        expand(
            "results/{project}/classification/{sample}/{sample}.bac120.summary.tsv",
            project=get_project(),
            sample=get_samples(),
        ),  
   directory(expand(
            "results/{project}/report/assembly_test/",
            project=get_project(),
            sample=get_samples(),
        )),    
        expand(
            "results/{project}/report/{sample}/kraken.krona.html",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/report/{sample}/kaiju.out.html",
            project=get_project(),
            sample=get_samples(),
        ),      
        expand(
            "results/{project}/qc/multiqc.html",
            project=get_project(),
        ),
        expand(
            "results/{project}/report/assembly_summary.html",
            project=get_project(),
        ),
        expand(
            "results/{project}/report/kraken2_summary.html",
            project=get_project(),
        ),
        expand(
            "results/{project}/report/bracken_plot.png",
            project=get_project(),
        ),
        expand(
            "results/{project}/report/{sample}/mags_summary.html",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/report/{sample}/bin_summary.html",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/report/{sample}/bin_taxonomy.html",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/report/{sample}/checkm_summary.html",
            project=get_project(),
            sample=get_samples(),
        ),
        expand(
            "results/{project}/report/{sample}/DASTool_summary.html",
            project=get_project(),
            sample=get_samples(),
        ),       
"""
